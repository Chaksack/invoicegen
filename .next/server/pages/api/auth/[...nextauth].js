"use strict";(()=>{var e={};e.id=748,e.ids=[748],e.modules={8432:e=>{e.exports=require("bcryptjs")},9344:e=>{e.exports=require("jsonwebtoken")},3227:e=>{e.exports=require("next-auth")},3598:e=>{e.exports=require("next-auth/providers/google")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5900:e=>{e.exports=require("pg")},5315:e=>{e.exports=require("path")},2930:e=>{e.exports=import("@auth/sequelize-adapter")},8210:e=>{e.exports=import("sequelize")},7692:(e,r,n)=>{n.a(e,async(e,o)=>{try{n.r(r),n.d(r,{config:()=>u,default:()=>c,routeModule:()=>d});var t=n(1802),i=n(7153),s=n(6249),a=n(3857),l=e([a]);a=(l.then?(await l)():l)[0];let c=(0,s.l)(a,"default"),u=(0,s.l)(a,"config"),d=new t.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/auth/[...nextauth]",pathname:"/api/auth/[...nextauth]",bundlePath:"",filename:""},userland:a});o()}catch(e){o(e)}})},3857:(e,r,n)=>{n.a(e,async(e,o)=>{try{n.r(r),n.d(r,{default:()=>h});var t=n(3227),i=n.n(t),s=n(3598),a=n.n(s),l=n(2930),c=n(409),u=n(6075),d=n(9344),g=n.n(d),p=e([l,c,u]);[l,c,u]=p.then?(await p)():p;let m=()=>{let e=["GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","JWT_SECRET","NEXTAUTH_SECRET"].filter(e=>!process.env[e]);if(e.length>0)throw console.error(`Missing required environment variables: ${e.join(", ")}`),Error(`Missing required environment variables: ${e.join(", ")}`);"your_jwt_secret_key_change_this_in_production"===process.env.JWT_SECRET&&console.error("WARNING: Using default JWT_SECRET in production environment!")},E=!1,y=null,f=async()=>y||(m(),y=(0,c.Dv)().then(e=>(E=e,e?console.log("Database initialized successfully for NextAuth"):console.error("Failed to initialize database for NextAuth"),e)).catch(e=>(console.error("Error initializing database for NextAuth:",e),!1))),w=async()=>{let e;await f();try{console.log("Initializing SequelizeAdapter..."),e=(0,l.default)(c.gk),console.log("SequelizeAdapter initialized successfully")}catch(e){console.error("Error initializing SequelizeAdapter:",e),console.warn("Falling back to JWT-only mode (no database adapter)")}return{providers:[a()({clientId:process.env.GOOGLE_CLIENT_ID||"",clientSecret:process.env.GOOGLE_CLIENT_SECRET||""})],...e?{adapter:e}:{},session:{strategy:"jwt",maxAge:2592e3},pages:{signIn:"/login",signOut:"/login",error:"/login"},callbacks:{async signIn({user:e,account:r,profile:n}){try{if(r?.provider!=="google")return!1;if(!E)return console.error("Database not initialized during sign-in attempt"),!1;if(e.email)try{let r=await u.n.findOne({where:{email:e.email}});r?!r.googleId&&n&&await r.update({googleId:n.sub,name:e.name||void 0,image:e.image||void 0,emailVerified:!0}):await u.n.create({email:e.email,name:e.name||void 0,image:e.image||void 0,googleId:n?n.sub:void 0,emailVerified:!0})}catch(e){return console.error("Database error during sign-in:",e),!1}return!0}catch(e){return console.error("Error in signIn callback:",e),!1}},async jwt({token:e,user:r}){try{if(r){e.userId=r.id;let n=process.env.JWT_SECRET;if(!n)throw console.error("JWT_SECRET is not defined"),Error("JWT_SECRET is not defined");let o=g().sign({id:r.id},n,{expiresIn:"7d"});e.customToken=o}return e}catch(r){return console.error("Error in jwt callback:",r),e}},async session({session:e,token:r}){try{console.log("Session callback called with token:",{hasToken:!!r,tokenKeys:r?Object.keys(r):[],hasUserId:!!r?.userId});let n={...e};return n.user||(console.warn("Session callback: session.user is undefined, creating empty user object"),n.user={id:"",name:null,email:null,image:null}),r?.userId?(n.user.id=r.userId,r.customToken&&(n.customToken=r.customToken)):(console.warn("Session callback: token is missing userId",{hasToken:!!r,tokenKeys:r?Object.keys(r):[]}),n.user.id||(n.user.id="")),n.expires||(console.warn("Session callback: session.expires is undefined, setting default expiry"),n.expires=new Date(Date.now()+2592e6).toISOString()),console.log("Session callback returning session with user ID:",n.user.id),n}catch(e){return console.error("Error in session callback:",e),{user:{id:"",name:null,email:null,image:null},expires:new Date(Date.now()+2592e6).toISOString()}}}},debug:!1}};async function h(e,r){console.log(`NextAuth request: ${e.method} ${e.url}`);try{console.log("Initializing auth database connection...");let n=await f();console.log("Database initialization result:",n),console.log("Getting NextAuth options...");let o=await w();if(console.log("NextAuth handler processing request:",{path:e.url,method:e.method,hasAdapter:!!o.adapter,providers:o.providers.map(e=>e.id).join(", "),sessionStrategy:o.session?.strategy||"default"}),e.url.includes("/api/auth/session")){console.log("Processing session request - applying enhanced error handling");try{return await i()(e,r,o)}catch(e){return console.error("Error in session endpoint:",e),r.status(200).json({user:null,expires:new Date(Date.now()+2592e6).toISOString()})}}return await i()(e,r,o)}catch(e){if(console.error("Critical error in NextAuth handler:",e),e instanceof Error&&(console.error(`Error name: ${e.name}`),console.error(`Error message: ${e.message}`),console.error(`Error stack: ${e.stack}`)),r.headersSent){console.warn("Headers already sent, cannot send error response");return}r.status(500).json({error:"Internal Server Error",message:"Authentication service is temporarily unavailable",timestamp:new Date().toISOString()})}}o()}catch(e){o(e)}})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var n=e=>r(r.s=e),o=r.X(0,[762],()=>n(7692));module.exports=o})();