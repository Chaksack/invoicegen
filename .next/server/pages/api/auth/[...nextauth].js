/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "(api)/./lib/db sync recursive":
/*!**********************!*\
  !*** ./lib/db/ sync ***!
  \**********************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(api)/./lib/db sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("bcryptjs");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/google":
/*!*********************************************!*\
  !*** external "next-auth/providers/google" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-auth/providers/google");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("pg");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "@auth/sequelize-adapter":
/*!******************************************!*\
  !*** external "@auth/sequelize-adapter" ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@auth/sequelize-adapter");;

/***/ }),

/***/ "sequelize":
/*!****************************!*\
  !*** external "sequelize" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = import("sequelize");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/auth/[...nextauth].ts */ \"(api)/./pages/api/auth/[...nextauth].ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/auth/[...nextauth]\",\n        pathname: \"/api/auth/[...nextauth]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGYXV0aCUyRiU1Qi4uLm5leHRhdXRoJTVELnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzhEO0FBQzlEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW52b2ljZWdlbi8/YjZiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/db/db.ts":
/*!**********************!*\
  !*** ./lib/db/db.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initDb: () => (/* binding */ initDb),\n/* harmony export */   sequelize: () => (/* binding */ sequelize),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sequelize__WEBPACK_IMPORTED_MODULE_0__]);\nsequelize__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Explicitly require pg to ensure it's loaded\n// This helps prevent the \"Please install pg package manually\" error in serverless environments\nlet pgLoaded = false;\n// First attempt - standard require\ntry {\n    __webpack_require__(/*! pg */ \"pg\");\n    console.log(\"Successfully loaded pg package (standard require)\");\n    pgLoaded = true;\n} catch (error) {\n    console.error(\"Error loading pg package (standard require):\", error);\n}\n// Second attempt - using dynamic import if first attempt failed\nif (!pgLoaded) {\n    try {\n        const pg = __webpack_require__(/*! pg */ \"pg\");\n        console.log(\"Successfully loaded pg package (variable assignment)\");\n        pgLoaded = true;\n    } catch (secondError) {\n        console.error(\"Error loading pg package (variable assignment):\", secondError);\n    }\n}\n// Third attempt - using path resolution if previous attempts failed\nif (!pgLoaded) {\n    try {\n        const path = __webpack_require__(/*! path */ \"path\");\n        const pgPath = path.resolve(process.cwd(), \"node_modules/pg\");\n        const pg = __webpack_require__(\"(api)/./lib/db sync recursive\")(pgPath);\n        console.log(\"Successfully loaded pg package (path resolution)\");\n        pgLoaded = true;\n    } catch (thirdError) {\n        console.error(\"Error loading pg package (path resolution):\", thirdError);\n    }\n}\n// Final attempt - using global.__non_webpack_require__ if available (for Next.js)\nif (!pgLoaded && typeof global.__non_webpack_require__ === \"function\") {\n    try {\n        const pg = global.__non_webpack_require__(\"pg\");\n        console.log(\"Successfully loaded pg package (non-webpack require)\");\n        pgLoaded = true;\n    } catch (fourthError) {\n        console.error(\"Error loading pg package (non-webpack require):\", fourthError);\n    }\n}\nif (!pgLoaded) {\n    console.warn(\"⚠️ WARNING: Failed to load pg package after multiple attempts. This may cause issues with database connections.\");\n}\n// Initialize Sequelize with environment variables\nlet sequelize;\n// Initialize Sequelize with proper error handling\ntry {\n    // Check if running with Neon database or Vercel Postgres\n    if (process.env.DATABASE_URL || process.env.POSTGRES_URL) {\n        // Prioritize Neon database connection if available\n        const connectionUrl = process.env.DATABASE_URL || process.env.POSTGRES_URL;\n        console.log(\"Using Neon database connection\");\n        // Log connection string (with credentials masked)\n        // We know connectionUrl is defined here because of the if condition above\n        const maskedUrl = connectionUrl.replace(/:\\/\\/([^:]+):([^@]+)@/, \"://$1:****@\");\n        console.log(\"Connection URL (masked):\", maskedUrl);\n        // Use the Neon database connection string\n        sequelize = new sequelize__WEBPACK_IMPORTED_MODULE_0__.Sequelize(connectionUrl, {\n            dialect: \"postgres\",\n            logging:  true ? console.log : 0,\n            dialectOptions: {\n                ssl: {\n                    require: true,\n                    rejectUnauthorized: false\n                },\n                // Add query timeout for Neon database (30 seconds)\n                // This helps prevent long-running queries from causing issues in serverless environments\n                statement_timeout: 30000\n            },\n            // Add retry logic for connection\n            pool: {\n                max: 5,\n                min: 0,\n                acquire: 30000,\n                idle: 10000\n            }\n        });\n    } else if (false) {} else {\n        // Use traditional connection parameters for local development\n        console.log(\"Using local PostgreSQL connection\");\n        sequelize = new sequelize__WEBPACK_IMPORTED_MODULE_0__.Sequelize(process.env.DB_NAME || \"invoicegen\", process.env.DB_USER || \"postgres\", process.env.DB_PASSWORD || \"postgres\", {\n            host: process.env.DB_HOST || \"localhost\",\n            port: parseInt(process.env.DB_PORT || \"5432\"),\n            dialect: \"postgres\",\n            logging:  true ? console.log : 0,\n            dialectOptions: {\n                ssl: false,\n                // Add query timeout for local development (30 seconds)\n                // This helps maintain consistent behavior with production\n                statement_timeout: 30000\n            },\n            // Add retry logic for connection\n            pool: {\n                max: 5,\n                min: 0,\n                acquire: 30000,\n                idle: 10000\n            }\n        });\n    }\n    console.log(\"Sequelize instance created successfully\");\n} catch (error) {\n    console.error(\"Error initializing Sequelize:\", error);\n}\n// Test the connection with retry logic and enhanced error reporting\nconst testConnection = async (retries = 5, delay = 5000)=>{\n    let currentTry = 0;\n    // Log connection attempt with environment info\n    console.log(\"Testing database connection with the following configuration:\");\n    console.log(\"- Environment:\", \"development\" || 0);\n    console.log(\"- Using Neon Database:\", !!process.env.DATABASE_URL);\n    console.log(\"- Using Vercel Postgres:\", !!process.env.POSTGRES_URL && !process.env.DATABASE_URL);\n    console.log(\"- Dialect:\", \"postgres\");\n    while(currentTry < retries){\n        try {\n            await sequelize.authenticate();\n            console.log(\"✅ Database connection has been established successfully.\");\n            return true;\n        } catch (error) {\n            currentTry++;\n            // Enhanced error logging with more details\n            console.error(`❌ Unable to connect to the database (attempt ${currentTry}/${retries}):`);\n            console.error(`- Error name: ${error.name || \"Unknown\"}`);\n            console.error(`- Error message: ${error.message || \"No message\"}`);\n            // Log specific details for common errors\n            if (error.name === \"SequelizeConnectionError\") {\n                console.error(\"- This is a connection error. Check if the database server is running and accessible.\");\n            } else if (error.name === \"SequelizeConnectionRefusedError\") {\n                console.error(\"- Connection refused. Check if the database server is running and the port is correct.\");\n            } else if (error.name === \"SequelizeHostNotFoundError\") {\n                console.error(\"- Host not found. Check if the database host is correct.\");\n            } else if (error.name === \"SequelizeAccessDeniedError\") {\n                console.error(\"- Access denied. Check if the database credentials are correct.\");\n            } else if (error.name === \"SequelizeConnectionTimedOutError\") {\n                console.error(\"- Connection timed out. Check if the database server is responding.\");\n            } else if (error.message && error.message.includes(\"please install pg\")) {\n                console.error(\"- The pg package is not properly loaded. This is likely an issue with the serverless environment.\");\n                console.error(\"- Trying to load pg package explicitly...\");\n                try {\n                    const pg = __webpack_require__(/*! pg */ \"pg\");\n                    console.log(\"- Successfully loaded pg package during error recovery\");\n                } catch (pgError) {\n                    console.error(\"- Failed to load pg package during error recovery:\", pgError);\n                }\n            }\n            if (currentTry >= retries) {\n                console.error(\"⛔ Maximum connection attempts reached. Database connection failed.\");\n                // In production, we might want to notify administrators\n                if (false) {}\n                return false;\n            }\n            // Wait before trying again\n            console.log(`⏱️ Retrying in ${delay / 1000} seconds...`);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    return false;\n};\n// Initialize database with enhanced error handling\nconst initDb = async ()=>{\n    console.log(\"\\uD83D\\uDD04 Initializing database...\");\n    try {\n        // First test the connection with retry logic\n        console.log(\"\\uD83D\\uDD04 Testing database connection...\");\n        const connectionSuccessful = await testConnection();\n        // If connection failed, return false\n        if (!connectionSuccessful) {\n            console.error(\"❌ Database connection failed after multiple retries\");\n            return false;\n        }\n        // Import models with error handling\n        console.log(\"\\uD83D\\uDD04 Loading database models...\");\n        try {\n            __webpack_require__(/*! ./models/User */ \"(api)/./lib/db/models/User.ts\");\n            console.log(\"✅ User model loaded successfully\");\n        } catch (userModelError) {\n            console.error(\"❌ Error loading User model:\", userModelError);\n            return false;\n        }\n        try {\n            __webpack_require__(/*! ./models/Invoice */ \"(api)/./lib/db/models/Invoice.ts\");\n            console.log(\"✅ Invoice model loaded successfully\");\n        } catch (invoiceModelError) {\n            console.error(\"❌ Error loading Invoice model:\", invoiceModelError);\n            return false;\n        }\n        // In production, we don't want to alter tables automatically\n        // This should be done through migrations\n        const syncOptions =  true ? {\n            alter: true\n        } : 0;\n        console.log(`🔄 Synchronizing database with options: ${JSON.stringify(syncOptions)}`);\n        try {\n            await sequelize.sync(syncOptions);\n            console.log(\"✅ Database synchronized successfully\");\n            return true;\n        } catch (syncError) {\n            console.error(\"❌ Error synchronizing database:\");\n            console.error(`- Error name: ${syncError.name || \"Unknown\"}`);\n            console.error(`- Error message: ${syncError.message || \"No message\"}`);\n            // Special handling for common sync errors\n            if (syncError.name === \"SequelizeDatabaseError\") {\n                console.error(\"- This is a database error. Check if the tables can be created/altered.\");\n            } else if (syncError.name === \"SequelizeConnectionError\") {\n                console.error(\"- This is a connection error. The connection might have been lost during sync.\");\n            } else if (syncError.message && syncError.message.includes(\"please install pg\")) {\n                console.error(\"- The pg package is not properly loaded. This is likely an issue with the serverless environment.\");\n                console.error(\"- Trying to load pg package explicitly...\");\n                try {\n                    const pg = __webpack_require__(/*! pg */ \"pg\");\n                    console.log(\"- Successfully loaded pg package during error recovery\");\n                } catch (pgError) {\n                    console.error(\"- Failed to load pg package during error recovery:\", pgError);\n                }\n            }\n            // In production, we might want to notify administrators\n            if (false) {}\n            return false;\n        }\n    } catch (error) {\n        console.error(\"❌ Unexpected error during database initialization:\");\n        console.error(`- Error name: ${error.name || \"Unknown\"}`);\n        console.error(`- Error message: ${error.message || \"No message\"}`);\n        // In production, we might want to notify administrators\n        if (false) {}\n        return false;\n    }\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/db/db.ts\n");

/***/ }),

/***/ "(api)/./lib/db/models/Invoice.ts":
/*!**********************************!*\
  !*** ./lib/db/models/Invoice.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db */ \"(api)/./lib/db/db.ts\");\n/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./User */ \"(api)/./lib/db/models/User.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sequelize__WEBPACK_IMPORTED_MODULE_0__, _db__WEBPACK_IMPORTED_MODULE_1__, _User__WEBPACK_IMPORTED_MODULE_2__]);\n([sequelize__WEBPACK_IMPORTED_MODULE_0__, _db__WEBPACK_IMPORTED_MODULE_1__, _User__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst Invoice = _db__WEBPACK_IMPORTED_MODULE_1__.sequelize.define(\"Invoice\", {\n    id: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.UUID,\n        defaultValue: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.UUIDV4,\n        primaryKey: true\n    },\n    invoiceNumber: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true\n    },\n    invoiceDate: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.DATEONLY,\n        allowNull: false,\n        defaultValue: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.NOW\n    },\n    dueDate: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.DATEONLY,\n        allowNull: true\n    },\n    logoUrl: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true\n    },\n    sender: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.JSONB,\n        allowNull: false,\n        defaultValue: {\n            name: \"\",\n            address: \"\",\n            city: \"\",\n            postalCode: \"\",\n            country: \"\"\n        }\n    },\n    recipient: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.JSONB,\n        allowNull: false,\n        defaultValue: {\n            name: \"\",\n            address: \"\",\n            city: \"\",\n            postalCode: \"\",\n            country: \"\"\n        }\n    },\n    items: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.JSONB,\n        allowNull: false,\n        defaultValue: []\n    },\n    currency: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: false,\n        defaultValue: \"USD\"\n    },\n    taxRate: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    subtotal: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    total: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    UserId: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.UUID,\n        allowNull: false,\n        references: {\n            model: \"Users\",\n            key: \"id\"\n        }\n    }\n}, {\n    timestamps: true,\n    hooks: {\n        beforeCreate: (invoice)=>{\n            // Calculate subtotal and total before saving\n            const subtotal = invoice.items.reduce((sum, item)=>sum + item.quantity * item.unitPrice, 0);\n            const taxAmount = subtotal * (invoice.taxRate / 100);\n            invoice.subtotal = subtotal;\n            invoice.total = subtotal + taxAmount;\n        },\n        beforeUpdate: (invoice)=>{\n            // Recalculate if items or tax rate changed\n            if (invoice.changed(\"items\") || invoice.changed(\"taxRate\")) {\n                const subtotal = invoice.items.reduce((sum, item)=>sum + item.quantity * item.unitPrice, 0);\n                const taxAmount = subtotal * (invoice.taxRate / 100);\n                invoice.subtotal = subtotal;\n                invoice.total = subtotal + taxAmount;\n            }\n        }\n    }\n});\n// Define association\n_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hasMany(Invoice);\nInvoice.belongsTo(_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Invoice);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/db/models/Invoice.ts\n");

/***/ }),

/***/ "(api)/./lib/db/models/User.ts":
/*!*******************************!*\
  !*** ./lib/db/models/User.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ \"sequelize\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../db */ \"(api)/./lib/db/db.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sequelize__WEBPACK_IMPORTED_MODULE_0__, _db__WEBPACK_IMPORTED_MODULE_2__]);\n([sequelize__WEBPACK_IMPORTED_MODULE_0__, _db__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst User = _db__WEBPACK_IMPORTED_MODULE_2__.sequelize.define(\"User\", {\n    id: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.UUID,\n        defaultValue: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.UUIDV4,\n        primaryKey: true\n    },\n    email: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: false,\n        unique: true,\n        validate: {\n            isEmail: true\n        }\n    },\n    password: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true\n    },\n    emailVerified: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.BOOLEAN,\n        defaultValue: false\n    },\n    name: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true\n    },\n    image: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true\n    },\n    googleId: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.STRING,\n        allowNull: true,\n        unique: true\n    },\n    settings: {\n        type: sequelize__WEBPACK_IMPORTED_MODULE_0__.DataTypes.JSONB,\n        defaultValue: {\n            sender: {\n                name: \"\",\n                address: \"\",\n                city: \"\",\n                postalCode: \"\",\n                country: \"\"\n            },\n            logoUrl: \"\"\n        }\n    }\n}, {\n    timestamps: true,\n    hooks: {\n        beforeCreate: async (user)=>{\n            if (user.password) {\n                const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(10);\n                const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(user.password, salt);\n                user.password = hashedPassword;\n            }\n        },\n        beforeUpdate: async (user)=>{\n            if (user.changed(\"password\") && user.password) {\n                const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(10);\n                const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(user.password, salt);\n                user.password = hashedPassword;\n            }\n        }\n    }\n});\n// Instance method to compare password\nUser.prototype.comparePassword = async function(candidatePassword) {\n    // If user has no password (e.g., Google auth user), return false\n    if (!this.password) {\n        return false;\n    }\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(candidatePassword, this.password);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZGIvbW9kZWxzL1VzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDekI7QUFDSTtBQWlDbEMsTUFBTUcsT0FBT0QsMENBQVNBLENBQUNFLE1BQU0sQ0FDM0IsUUFDQTtJQUNFQyxJQUFJO1FBQ0ZDLE1BQU1OLGdEQUFTQSxDQUFDTyxJQUFJO1FBQ3BCQyxjQUFjUixnREFBU0EsQ0FBQ1MsTUFBTTtRQUM5QkMsWUFBWTtJQUNkO0lBQ0FDLE9BQU87UUFDTEwsTUFBTU4sZ0RBQVNBLENBQUNZLE1BQU07UUFDdEJDLFdBQVc7UUFDWEMsUUFBUTtRQUNSQyxVQUFVO1lBQ1JDLFNBQVM7UUFDWDtJQUNGO0lBQ0FDLFVBQVU7UUFDUlgsTUFBTU4sZ0RBQVNBLENBQUNZLE1BQU07UUFDdEJDLFdBQVc7SUFDYjtJQUNBSyxlQUFlO1FBQ2JaLE1BQU1OLGdEQUFTQSxDQUFDbUIsT0FBTztRQUN2QlgsY0FBYztJQUNoQjtJQUNBWSxNQUFNO1FBQ0pkLE1BQU1OLGdEQUFTQSxDQUFDWSxNQUFNO1FBQ3RCQyxXQUFXO0lBQ2I7SUFDQVEsT0FBTztRQUNMZixNQUFNTixnREFBU0EsQ0FBQ1ksTUFBTTtRQUN0QkMsV0FBVztJQUNiO0lBQ0FTLFVBQVU7UUFDUmhCLE1BQU1OLGdEQUFTQSxDQUFDWSxNQUFNO1FBQ3RCQyxXQUFXO1FBQ1hDLFFBQVE7SUFDVjtJQUNBUyxVQUFVO1FBQ1JqQixNQUFNTixnREFBU0EsQ0FBQ3dCLEtBQUs7UUFDckJoQixjQUFjO1lBQ1ppQixRQUFRO2dCQUNOTCxNQUFNO2dCQUNOTSxTQUFTO2dCQUNUQyxNQUFNO2dCQUNOQyxZQUFZO2dCQUNaQyxTQUFTO1lBQ1g7WUFDQUMsU0FBUztRQUNYO0lBQ0Y7QUFDRixHQUNBO0lBQ0VDLFlBQVk7SUFDWkMsT0FBTztRQUNMQyxjQUFjLE9BQU9DO1lBQ25CLElBQUlBLEtBQUtqQixRQUFRLEVBQUU7Z0JBQ2pCLE1BQU1rQixPQUFPLE1BQU1sQyx1REFBYyxDQUFDO2dCQUNsQyxNQUFNb0MsaUJBQXlCLE1BQU1wQyxvREFBVyxDQUFDaUMsS0FBS2pCLFFBQVEsRUFBRWtCO2dCQUNoRUQsS0FBS2pCLFFBQVEsR0FBR29CO1lBQ2xCO1FBQ0Y7UUFDQUUsY0FBYyxPQUFPTDtZQUNuQixJQUFJQSxLQUFLTSxPQUFPLENBQUMsZUFBZU4sS0FBS2pCLFFBQVEsRUFBRTtnQkFDN0MsTUFBTWtCLE9BQU8sTUFBTWxDLHVEQUFjLENBQUM7Z0JBQ2xDLE1BQU1vQyxpQkFBeUIsTUFBTXBDLG9EQUFXLENBQUNpQyxLQUFLakIsUUFBUSxFQUFFa0I7Z0JBQ2hFRCxLQUFLakIsUUFBUSxHQUFHb0I7WUFDbEI7UUFDRjtJQUNGO0FBQ0Y7QUFHRixzQ0FBc0M7QUFDdENsQyxLQUFLc0MsU0FBUyxDQUFDQyxlQUFlLEdBQUcsZUFBZUMsaUJBQXlCO0lBQ3ZFLGlFQUFpRTtJQUNqRSxJQUFJLENBQUMsSUFBSSxDQUFDMUIsUUFBUSxFQUFFO1FBQ2xCLE9BQU87SUFDVDtJQUNBLE9BQU8sTUFBTWhCLHVEQUFjLENBQUMwQyxtQkFBbUIsSUFBSSxDQUFDMUIsUUFBUTtBQUM5RDtBQUVBLGlFQUFlZCxJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW52b2ljZWdlbi8uL2xpYi9kYi9tb2RlbHMvVXNlci50cz82MTZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFUeXBlcywgTW9kZWwsIE9wdGlvbmFsIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0anMnO1xuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGInO1xuXG4vLyBEZWZpbmUgVXNlciBhdHRyaWJ1dGVzXG5pbnRlcmZhY2UgVXNlckF0dHJpYnV0ZXMge1xuICBpZDogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBwYXNzd29yZD86IHN0cmluZztcbiAgZW1haWxWZXJpZmllZDogYm9vbGVhbjtcbiAgbmFtZT86IHN0cmluZztcbiAgaW1hZ2U/OiBzdHJpbmc7XG4gIGdvb2dsZUlkPzogc3RyaW5nO1xuICBzZXR0aW5nczoge1xuICAgIHNlbmRlcj86IHtcbiAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgIGFkZHJlc3M6IHN0cmluZztcbiAgICAgIGNpdHk6IHN0cmluZztcbiAgICAgIHBvc3RhbENvZGU6IHN0cmluZztcbiAgICAgIGNvdW50cnk6IHN0cmluZztcbiAgICB9O1xuICAgIGxvZ29Vcmw/OiBzdHJpbmc7XG4gIH07XG4gIGNyZWF0ZWRBdD86IERhdGU7XG4gIHVwZGF0ZWRBdD86IERhdGU7XG59XG5cbi8vIERlZmluZSBvcHRpb25hbCBhdHRyaWJ1dGVzIGZvciBVc2VyIGNyZWF0aW9uXG5pbnRlcmZhY2UgVXNlckNyZWF0aW9uQXR0cmlidXRlcyBleHRlbmRzIE9wdGlvbmFsPFVzZXJBdHRyaWJ1dGVzLCAnaWQnIHwgJ2VtYWlsVmVyaWZpZWQnIHwgJ3NldHRpbmdzJz4ge31cblxuLy8gRGVmaW5lIFVzZXIgbW9kZWwgd2l0aCBpbnN0YW5jZSBtZXRob2RzXG5pbnRlcmZhY2UgVXNlckluc3RhbmNlIGV4dGVuZHMgTW9kZWw8VXNlckF0dHJpYnV0ZXMsIFVzZXJDcmVhdGlvbkF0dHJpYnV0ZXM+LCBVc2VyQXR0cmlidXRlcyB7XG4gIGNvbXBhcmVQYXNzd29yZChjYW5kaWRhdGVQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcbn1cblxuY29uc3QgVXNlciA9IHNlcXVlbGl6ZS5kZWZpbmU8VXNlckluc3RhbmNlPihcbiAgJ1VzZXInLFxuICB7XG4gICAgaWQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5VVUlELFxuICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuVVVJRFY0LFxuICAgICAgcHJpbWFyeUtleTogdHJ1ZVxuICAgIH0sXG4gICAgZW1haWw6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgdW5pcXVlOiB0cnVlLFxuICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgaXNFbWFpbDogdHJ1ZVxuICAgICAgfVxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICBhbGxvd051bGw6IHRydWVcbiAgICB9LFxuICAgIGVtYWlsVmVyaWZpZWQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZVxuICAgIH0sXG4gICAgbmFtZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGFsbG93TnVsbDogdHJ1ZVxuICAgIH0sXG4gICAgaW1hZ2U6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICBhbGxvd051bGw6IHRydWVcbiAgICB9LFxuICAgIGdvb2dsZUlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgICAgdW5pcXVlOiB0cnVlXG4gICAgfSxcbiAgICBzZXR0aW5nczoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkpTT05CLFxuICAgICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICAgIHNlbmRlcjoge1xuICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgIGFkZHJlc3M6ICcnLFxuICAgICAgICAgIGNpdHk6ICcnLFxuICAgICAgICAgIHBvc3RhbENvZGU6ICcnLFxuICAgICAgICAgIGNvdW50cnk6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIGxvZ29Vcmw6ICcnXG4gICAgICB9XG4gICAgfVxuICB9LFxuICB7XG4gICAgdGltZXN0YW1wczogdHJ1ZSxcbiAgICBob29rczoge1xuICAgICAgYmVmb3JlQ3JlYXRlOiBhc3luYyAodXNlcjogVXNlckluc3RhbmNlKSA9PiB7XG4gICAgICAgIGlmICh1c2VyLnBhc3N3b3JkKSB7XG4gICAgICAgICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcbiAgICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZDogc3RyaW5nID0gYXdhaXQgYmNyeXB0Lmhhc2godXNlci5wYXNzd29yZCwgc2FsdCk7XG4gICAgICAgICAgdXNlci5wYXNzd29yZCA9IGhhc2hlZFBhc3N3b3JkO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYmVmb3JlVXBkYXRlOiBhc3luYyAodXNlcjogVXNlckluc3RhbmNlKSA9PiB7XG4gICAgICAgIGlmICh1c2VyLmNoYW5nZWQoJ3Bhc3N3b3JkJykgJiYgdXNlci5wYXNzd29yZCkge1xuICAgICAgICAgIGNvbnN0IHNhbHQgPSBhd2FpdCBiY3J5cHQuZ2VuU2FsdCgxMCk7XG4gICAgICAgICAgY29uc3QgaGFzaGVkUGFzc3dvcmQ6IHN0cmluZyA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXIucGFzc3dvcmQsIHNhbHQpO1xuICAgICAgICAgIHVzZXIucGFzc3dvcmQgPSBoYXNoZWRQYXNzd29yZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuKTtcblxuLy8gSW5zdGFuY2UgbWV0aG9kIHRvIGNvbXBhcmUgcGFzc3dvcmRcblVzZXIucHJvdG90eXBlLmNvbXBhcmVQYXNzd29yZCA9IGFzeW5jIGZ1bmN0aW9uKGNhbmRpZGF0ZVBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgLy8gSWYgdXNlciBoYXMgbm8gcGFzc3dvcmQgKGUuZy4sIEdvb2dsZSBhdXRoIHVzZXIpLCByZXR1cm4gZmFsc2VcbiAgaWYgKCF0aGlzLnBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBhd2FpdCBiY3J5cHQuY29tcGFyZShjYW5kaWRhdGVQYXNzd29yZCwgdGhpcy5wYXNzd29yZCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBVc2VyOyJdLCJuYW1lcyI6WyJEYXRhVHlwZXMiLCJiY3J5cHQiLCJzZXF1ZWxpemUiLCJVc2VyIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiVVVJRCIsImRlZmF1bHRWYWx1ZSIsIlVVSURWNCIsInByaW1hcnlLZXkiLCJlbWFpbCIsIlNUUklORyIsImFsbG93TnVsbCIsInVuaXF1ZSIsInZhbGlkYXRlIiwiaXNFbWFpbCIsInBhc3N3b3JkIiwiZW1haWxWZXJpZmllZCIsIkJPT0xFQU4iLCJuYW1lIiwiaW1hZ2UiLCJnb29nbGVJZCIsInNldHRpbmdzIiwiSlNPTkIiLCJzZW5kZXIiLCJhZGRyZXNzIiwiY2l0eSIsInBvc3RhbENvZGUiLCJjb3VudHJ5IiwibG9nb1VybCIsInRpbWVzdGFtcHMiLCJob29rcyIsImJlZm9yZUNyZWF0ZSIsInVzZXIiLCJzYWx0IiwiZ2VuU2FsdCIsImhhc2hlZFBhc3N3b3JkIiwiaGFzaCIsImJlZm9yZVVwZGF0ZSIsImNoYW5nZWQiLCJwcm90b3R5cGUiLCJjb21wYXJlUGFzc3dvcmQiLCJjYW5kaWRhdGVQYXNzd29yZCIsImNvbXBhcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/db/models/User.ts\n");

/***/ }),

/***/ "(api)/./lib/db/models/index.ts":
/*!********************************!*\
  !*** ./lib/db/models/index.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Invoice: () => (/* reexport safe */ _Invoice__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   User: () => (/* reexport safe */ _User__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./User */ \"(api)/./lib/db/models/User.ts\");\n/* harmony import */ var _Invoice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Invoice */ \"(api)/./lib/db/models/Invoice.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_User__WEBPACK_IMPORTED_MODULE_0__, _Invoice__WEBPACK_IMPORTED_MODULE_1__]);\n([_User__WEBPACK_IMPORTED_MODULE_0__, _Invoice__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZGIvbW9kZWxzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEI7QUFDTTtBQUs5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludm9pY2VnZW4vLi9saWIvZGIvbW9kZWxzL2luZGV4LnRzPzY3NTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXIgZnJvbSAnLi9Vc2VyJztcbmltcG9ydCBJbnZvaWNlIGZyb20gJy4vSW52b2ljZSc7XG5cbmV4cG9ydCB7XG4gIFVzZXIsXG4gIEludm9pY2Vcbn07Il0sIm5hbWVzIjpbIlVzZXIiLCJJbnZvaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/db/models/index.ts\n");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].ts":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ auth)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"next-auth/providers/google\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_sequelize_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @auth/sequelize-adapter */ \"@auth/sequelize-adapter\");\n/* harmony import */ var _lib_db_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/db/db */ \"(api)/./lib/db/db.ts\");\n/* harmony import */ var _lib_db_models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/db/models */ \"(api)/./lib/db/models/index.ts\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_auth_sequelize_adapter__WEBPACK_IMPORTED_MODULE_2__, _lib_db_db__WEBPACK_IMPORTED_MODULE_3__, _lib_db_models__WEBPACK_IMPORTED_MODULE_4__]);\n([_auth_sequelize_adapter__WEBPACK_IMPORTED_MODULE_2__, _lib_db_db__WEBPACK_IMPORTED_MODULE_3__, _lib_db_models__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// Validate environment variables\nconst validateEnvVars = ()=>{\n    const requiredVars = [\n        \"GOOGLE_CLIENT_ID\",\n        \"GOOGLE_CLIENT_SECRET\",\n        \"JWT_SECRET\",\n        \"NEXTAUTH_SECRET\"\n    ];\n    const missingVars = requiredVars.filter((varName)=>!process.env[varName]);\n    if (missingVars.length > 0) {\n        console.error(`Missing required environment variables: ${missingVars.join(\", \")}`);\n        if (false) {}\n    }\n    // Warn about using default JWT secret in production\n    if (false) {}\n};\n// Track database initialization state\nlet dbInitialized = false;\nlet dbInitializationPromise = null;\n// Initialize database and adapter\nconst initializeAuth = async ()=>{\n    // Only initialize once\n    if (dbInitializationPromise) {\n        return dbInitializationPromise;\n    }\n    // Validate environment variables first\n    validateEnvVars();\n    // Initialize database with a promise we can track\n    dbInitializationPromise = (0,_lib_db_db__WEBPACK_IMPORTED_MODULE_3__.initDb)().then((success)=>{\n        dbInitialized = success;\n        if (!success) {\n            console.error(\"Failed to initialize database for NextAuth\");\n        } else {\n            console.log(\"Database initialized successfully for NextAuth\");\n        }\n        return success;\n    }).catch((error)=>{\n        console.error(\"Error initializing database for NextAuth:\", error);\n        return false;\n    });\n    return dbInitializationPromise;\n};\n// Create auth options function that ensures DB is initialized\nconst getAuthOptions = async ()=>{\n    // Wait for database initialization\n    const dbInitSuccess = await initializeAuth();\n    let adapter;\n    try {\n        // Only initialize adapter after DB is ready\n        console.log(\"Initializing SequelizeAdapter...\");\n        adapter = (0,_auth_sequelize_adapter__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_lib_db_db__WEBPACK_IMPORTED_MODULE_3__.sequelize);\n        console.log(\"SequelizeAdapter initialized successfully\");\n    } catch (adapterError) {\n        console.error(\"Error initializing SequelizeAdapter:\", adapterError);\n        // Continue without adapter if it fails to initialize\n        // This will fall back to JWT-only mode\n        console.warn(\"Falling back to JWT-only mode (no database adapter)\");\n    }\n    return {\n        providers: [\n            next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1___default()({\n                clientId: process.env.GOOGLE_CLIENT_ID || \"\",\n                clientSecret: process.env.GOOGLE_CLIENT_SECRET || \"\"\n            })\n        ],\n        // Only include adapter if it was successfully initialized\n        ...adapter ? {\n            adapter\n        } : {},\n        session: {\n            strategy: \"jwt\",\n            maxAge: 30 * 24 * 60 * 60\n        },\n        pages: {\n            signIn: \"/login\",\n            signOut: \"/login\",\n            error: \"/login\"\n        },\n        callbacks: {\n            async signIn ({ user, account, profile }) {\n                try {\n                    // Only allow Google sign-in\n                    if (account?.provider !== \"google\") {\n                        return false;\n                    }\n                    // Check if database is initialized\n                    if (!dbInitialized) {\n                        console.error(\"Database not initialized during sign-in attempt\");\n                        return false;\n                    }\n                    // Check if user exists in our database\n                    if (user.email) {\n                        try {\n                            const existingUser = await _lib_db_models__WEBPACK_IMPORTED_MODULE_4__.User.findOne({\n                                where: {\n                                    email: user.email\n                                }\n                            });\n                            if (existingUser) {\n                                // Update user with Google info if not already set\n                                if (!existingUser.googleId && profile) {\n                                    await existingUser.update({\n                                        googleId: profile.sub,\n                                        name: user.name || undefined,\n                                        image: user.image || undefined,\n                                        emailVerified: true\n                                    });\n                                }\n                            } else {\n                                // Create new user\n                                await _lib_db_models__WEBPACK_IMPORTED_MODULE_4__.User.create({\n                                    email: user.email,\n                                    name: user.name || undefined,\n                                    image: user.image || undefined,\n                                    googleId: profile ? profile.sub : undefined,\n                                    emailVerified: true\n                                });\n                            }\n                        } catch (dbError) {\n                            console.error(\"Database error during sign-in:\", dbError);\n                            return false;\n                        }\n                    }\n                    return true;\n                } catch (error) {\n                    console.error(\"Error in signIn callback:\", error);\n                    return false;\n                }\n            },\n            async jwt ({ token, user }) {\n                try {\n                    // Add custom claims to the JWT token\n                    if (user) {\n                        token.userId = user.id;\n                        // Get JWT secret with validation\n                        const jwtSecret = process.env.JWT_SECRET;\n                        if (!jwtSecret) {\n                            console.error(\"JWT_SECRET is not defined\");\n                            throw new Error(\"JWT_SECRET is not defined\");\n                        }\n                        // Create a JWT token compatible with our existing auth system\n                        const customToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_5___default().sign({\n                            id: user.id\n                        }, jwtSecret, {\n                            expiresIn: \"7d\"\n                        });\n                        token.customToken = customToken;\n                    }\n                    return token;\n                } catch (error) {\n                    console.error(\"Error in jwt callback:\", error);\n                    return token;\n                }\n            },\n            async session ({ session, token }) {\n                try {\n                    console.log(\"Session callback called with token:\", {\n                        hasToken: !!token,\n                        tokenKeys: token ? Object.keys(token) : [],\n                        hasUserId: !!token?.userId\n                    });\n                    // Create a safe copy of the session to avoid mutation issues\n                    const safeSession = {\n                        ...session\n                    };\n                    // Ensure user object exists\n                    if (!safeSession.user) {\n                        console.warn(\"Session callback: session.user is undefined, creating empty user object\");\n                        safeSession.user = {\n                            id: \"\",\n                            name: null,\n                            email: null,\n                            image: null\n                        };\n                    }\n                    // Add user ID to the session if available in token\n                    if (token?.userId) {\n                        safeSession.user.id = token.userId;\n                        // Add custom token to the session if available\n                        if (token.customToken) {\n                            safeSession.customToken = token.customToken;\n                        }\n                    } else {\n                        // Log warning if token is missing expected properties\n                        console.warn(\"Session callback: token is missing userId\", {\n                            hasToken: !!token,\n                            tokenKeys: token ? Object.keys(token) : []\n                        });\n                        // Ensure user has an ID even if token doesn't provide one\n                        if (!safeSession.user.id) {\n                            safeSession.user.id = \"\";\n                        }\n                    }\n                    // Ensure expires field exists\n                    if (!safeSession.expires) {\n                        console.warn(\"Session callback: session.expires is undefined, setting default expiry\");\n                        safeSession.expires = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(); // 30 days\n                    }\n                    console.log(\"Session callback returning session with user ID:\", safeSession.user.id);\n                    return safeSession;\n                } catch (error) {\n                    console.error(\"Error in session callback:\", error);\n                    // Return a basic session object to prevent complete failure\n                    // This allows the application to continue functioning with limited capabilities\n                    return {\n                        user: {\n                            id: \"\",\n                            name: null,\n                            email: null,\n                            image: null\n                        },\n                        expires: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days\n                    };\n                }\n            }\n        },\n        debug: \"development\" === \"development\"\n    };\n};\n// Export a dynamic API handler that ensures DB is initialized\nasync function auth(req, res) {\n    // Log request details for all environments to help with debugging\n    console.log(`NextAuth request: ${req.method} ${req.url}`);\n    try {\n        // Initialize database first to ensure it's ready\n        console.log(\"Initializing auth database connection...\");\n        const dbInitResult = await initializeAuth();\n        console.log(\"Database initialization result:\", dbInitResult);\n        // Get auth options (this will initialize the adapter if database is ready)\n        console.log(\"Getting NextAuth options...\");\n        const authOptions = await getAuthOptions();\n        // Add more detailed logging\n        console.log(\"NextAuth handler processing request:\", {\n            path: req.url,\n            method: req.method,\n            hasAdapter: !!authOptions.adapter,\n            providers: authOptions.providers.map((p)=>p.id).join(\", \"),\n            sessionStrategy: authOptions.session?.strategy || \"default\"\n        });\n        // Special handling for session endpoint to ensure it never fails with 500\n        if (req.url.includes(\"/api/auth/session\")) {\n            console.log(\"Processing session request - applying enhanced error handling\");\n            try {\n                return await next_auth__WEBPACK_IMPORTED_MODULE_0___default()(req, res, authOptions);\n            } catch (sessionError) {\n                console.error(\"Error in session endpoint:\", sessionError);\n                // For session endpoint, return an empty but valid session instead of error\n                // This prevents client-side auth failures and allows graceful degradation\n                return res.status(200).json({\n                    user: null,\n                    expires: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString()\n                });\n            }\n        }\n        // For other auth endpoints, use standard NextAuth with error handling\n        return await next_auth__WEBPACK_IMPORTED_MODULE_0___default()(req, res, authOptions);\n    } catch (error) {\n        console.error(\"Critical error in NextAuth handler:\", error);\n        // Log detailed error information\n        if (error instanceof Error) {\n            console.error(`Error name: ${error.name}`);\n            console.error(`Error message: ${error.message}`);\n            console.error(`Error stack: ${error.stack}`);\n        }\n        // Check if response has already been sent\n        if (res.headersSent) {\n            console.warn(\"Headers already sent, cannot send error response\");\n            return;\n        }\n        // Return a proper error response instead of throwing\n        res.status(500).json({\n            error: \"Internal Server Error\",\n            message: \"Authentication service is temporarily unavailable\",\n            timestamp: new Date().toISOString()\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fauth%2F%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();